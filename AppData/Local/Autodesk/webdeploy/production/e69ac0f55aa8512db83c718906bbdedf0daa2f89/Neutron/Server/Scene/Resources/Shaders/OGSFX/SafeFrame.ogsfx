//**************************************************************************/
// Copyright (c) 2015 Autodesk, Inc.
// All rights reserved.
// 
// These coded instructions, statements, and computer programs contain
// unpublished proprietary information written by Autodesk, Inc., and are
// protected by Federal copyright law. They may not be disclosed to third
// parties or copied or duplicated in any form, in whole or in part, without
// the prior written consent of Autodesk, Inc.
//**************************************************************************/
// DESCRIPTION: This is intended as a post process pass that adds semi transparent grey curtains to the edges of the input texture.
// AUTHOR: Pekka Akerstrom
// CREATED: August 2015
//**************************************************************************/

// include screen quad draw methods (vertex shader)
#include "Common.ogsfh"

// The amount of uv space that will be grey on each edge. [0,0.5].
uniform float gUCurtain = 0.0;
uniform float gVCurtain = 0.0;
// The amount of greyout.
uniform float gIntensity = 1.0;

// The single filter input, i.e. the image to be filtered.
uniform texture2D gInput;

// Filter input sampler.
uniform sampler2D InputSampler = sampler_state
{
    Texture = <gInput>;
};

attribute pixelOut {
    vec4 colorOut:COLOR0;
}

// Pixel shader.
// vec4 PS_SAFEFRAME(VS_TO_PS In) : COLOR0
GLSLShader PS_SAFEFRAME
{
    void main()
    {   
        vec4 texCol = texture2D(InputSampler, VSUV);

        float intensity = 1.0;

        if ( VSUV.x < gUCurtain || (1.0-VSUV.x) < gUCurtain )
            intensity = gIntensity;

        if ( VSUV.y < gVCurtain || (1.0-VSUV.y) < gVCurtain )
            intensity = gIntensity;

#if GL_ES && SHADER_VERSION == 2
        gl_FragColor = vec4(intensity*texCol.rgb,texCol.a);
#else
        colorOut = vec4(intensity*texCol.rgb,texCol.a);
#endif
    }
}

// The main technique.
technique Main
{
    pass p0
    {
        VertexShader (in VS_INPUT_ScreenQuad, out VS_TO_PS_ScreenQuad) = VS_ScreenQuad;
        PixelShader (in VS_TO_PS_ScreenQuad, out pixelOut) = PS_SAFEFRAME;
    }
}
